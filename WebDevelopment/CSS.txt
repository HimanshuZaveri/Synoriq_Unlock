https://www.youtube.com/watch?v=ua24185-rcw&list=PLu0W_9lII9agiCUZYRsvtGTXdxkzPyItg&index=18

*Video 13* == Introduction
{
    -> Cascading Style sheet
    -> Helps to style our website and makes it responsive
}

*Video 14* == CSS Types
{
    >> Inline(Higher in Precedence)
    >> Internal
    >> External
    
    -> Between Internal and external the one written afterwards overwrites the property written by the previous one.
    -> To lay the importance to previous one, we write <!important> after that property.
}

*Video 15* == Selectors in CSS
{
    >> Used to find out the element whose property has to be set.
    >> Makes easy to target multiple or single element.
    
    
    >>> Element selector
    >>> Id Selector  (#)
    >>> Class Selector   (.)
    >>> Grouping Selector
}

*Video 16* == Chrome Developer Tools

*Video 17* == Fonts in CSS
{
    > Web Safe Fonts
    > Google Fonts
    
    >> Font stack -- "font1" , "font2";;; It will give the font style specified first and if that is not present than the next font in the list.
    >>> Font-Family; Font-Size; Font-Weight; Font-Style.
}

*Video 18* == Colors in CSS
{
    >> By name
    >> RGB (0-255, 0-255, 0-255)
    >> HEX value #09adef
}

*Video 19* == Borders and Backgrounds
{
    >> Border -> border color
              -> border style
              -> border width
    >> Border radius
    
    >> background image -> background repeat -- repeat-x
                                             -- repeat-y
                                             -- no-repeat
                        -> background position -- (center, top bottom) (centre, left, right)
}

*Video 20* == CSS Box Model, Margin and Padding
{
    >> Box Model -- Margin
                 -- Border
                 -- Padding
                 -- Box-Sizing
    >> Margin/Padding - top right bottom left 
    >> Margin/Padding - top,bottom left,right 
}

*Video 21* == Float and CLear
{
    >> Float helps in positioning our content
    >> Parameter passed with clear will not overlay at our element
}

*Video 22* == Styling Links and buttons
{
    >> We can style links and buttons; for hover active visited.
}

*Video 23* == Navigation Menu

*Video 24* == CSS Display Property
{
    >> Inline
    >> Block
    >> inline-block
}

*Video 25* == CSS Positions
{
    >> static(default)
    >> absolute -- with respect to parent (top, left)
    >> fixed -- it remains fixed to its original position
    >> sticky -- when scrolled up the element sticks to the top
    >> relative -- with respect to its normal position (top, left)
}

*Video 27* == Visibility and Z-index
{
    >> display: none; will hide the element and the space
    >> visibility: hidden; will hide the element but the space occupied will be shown
    >> z-index will only work for positions other than static, it specifies the priority of the overlapping elements
}

*Video 28* == Flexbox
{
    >> Flexbox = Flexible + Box
    >> Flexbox > main axis; cross axis; flex item; 
    >> display: flex;  to make container flexbox
    >> Flex properties for container:-
        > flex-direction: row(default); column; row-reverse; column-reverse;
        > flex-wrap: wrap; wrap-reverse;
        > flex-flow: <flex direction> || <flex-wrap>
        > justify-content: space-between; center; space-around;space-evenly; <works in horizontal direction>
        > align-items: center; flex-end; flex-start; stretch; <Works in vertical direction>
        
    >> Flex Properties for flex item:-
        > order = 2; higher the order later the content shows up
        > flex-grow: When the screen grows this item will grow
        > flex-shrink: oppo of flex-grow
        > flex-basis: when flex-basis is set to row: it will control width;
            when flex direction is set to column it will control height;
        > flex: <grow> <shrink> <basis>
}
-----------------------------------------------------------------------------------------------------------------------------------------

*Video 29* == Responsive Design and Font Units
{
    >>> Ways to achieve Responsive Design
        >> Viewport
        >> max-width/max-height
        >> CSS Media Queries
        >> rem/vh/vw units over pixels 
        
    >>> Size Units:- em - sets the size specified no. of times of that of parent
                     rem - sets the size specified no. of times of that of root(specified with html selector)
                     vh - viewport height
                     vw - viewport width <can also be implemented using %>
}

*Video 30* == Media Queries
{
    @media (max-width/min-width) => similar to if condition
    >> @media only screen and (min width: 300px) and (max width: 500px){
        .class/#id {  } }
    >> it injects the css code when the condition is matched
}

*Video 31* == Advanced CSS selectors
{
    >> div p {} -> if p is contained inside div then the property will be applied 
    >> div > p {} -> if p is directly the child of div then property will be applied
    >> div + p {} -> if p is right after div then this css will be applied.
}

*Video 32* == Attributes and n th child pseudo selectors
{
    >> input[type='email'] { }
    >> li: nth-child(3 / 2n+0 / 3n+3 / odd / even) {  }
}

*Video 33* == Before and After Pseudo Selectors [Watch again]
{
    >> element :: after|before  {  }
    >> adds the properties after or before the element respectively
}

*Video 34* == Box Shadow and text shadow
{
    >> box-shadow: offset-x offset-y blur-radius spread-radius color;
    >> box-shadow: 4px 3px red, 5px 6px green;
    >> text-shadow:  offset-x offset-y blur-radius spread-radius color;
}
